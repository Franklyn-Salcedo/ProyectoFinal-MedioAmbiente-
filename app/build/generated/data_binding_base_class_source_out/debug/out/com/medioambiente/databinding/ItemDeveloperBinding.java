// Generated by view binder compiler. Do not edit!
package com.medioambiente.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.imageview.ShapeableImageView;
import com.medioambiente.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemDeveloperBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout contactLayout;

  @NonNull
  public final ShapeableImageView developerImageView;

  @NonNull
  public final TextView developerMatriculaTextView;

  @NonNull
  public final TextView developerNameTextView;

  @NonNull
  public final ImageButton phoneButton;

  @NonNull
  public final ImageButton telegramButton;

  private ItemDeveloperBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout contactLayout, @NonNull ShapeableImageView developerImageView,
      @NonNull TextView developerMatriculaTextView, @NonNull TextView developerNameTextView,
      @NonNull ImageButton phoneButton, @NonNull ImageButton telegramButton) {
    this.rootView = rootView;
    this.contactLayout = contactLayout;
    this.developerImageView = developerImageView;
    this.developerMatriculaTextView = developerMatriculaTextView;
    this.developerNameTextView = developerNameTextView;
    this.phoneButton = phoneButton;
    this.telegramButton = telegramButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemDeveloperBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemDeveloperBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_developer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemDeveloperBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.contactLayout;
      LinearLayout contactLayout = ViewBindings.findChildViewById(rootView, id);
      if (contactLayout == null) {
        break missingId;
      }

      id = R.id.developerImageView;
      ShapeableImageView developerImageView = ViewBindings.findChildViewById(rootView, id);
      if (developerImageView == null) {
        break missingId;
      }

      id = R.id.developerMatriculaTextView;
      TextView developerMatriculaTextView = ViewBindings.findChildViewById(rootView, id);
      if (developerMatriculaTextView == null) {
        break missingId;
      }

      id = R.id.developerNameTextView;
      TextView developerNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (developerNameTextView == null) {
        break missingId;
      }

      id = R.id.phoneButton;
      ImageButton phoneButton = ViewBindings.findChildViewById(rootView, id);
      if (phoneButton == null) {
        break missingId;
      }

      id = R.id.telegramButton;
      ImageButton telegramButton = ViewBindings.findChildViewById(rootView, id);
      if (telegramButton == null) {
        break missingId;
      }

      return new ItemDeveloperBinding((ConstraintLayout) rootView, contactLayout,
          developerImageView, developerMatriculaTextView, developerNameTextView, phoneButton,
          telegramButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
