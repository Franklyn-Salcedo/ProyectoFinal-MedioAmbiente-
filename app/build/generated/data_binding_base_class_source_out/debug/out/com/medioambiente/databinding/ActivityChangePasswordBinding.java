// Generated by view binder compiler. Do not edit!
package com.medioambiente.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.medioambiente.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityChangePasswordBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button changePasswordButton;

  @NonNull
  public final TextView changePasswordTitle;

  @NonNull
  public final TextInputEditText codeEditText;

  @NonNull
  public final TextInputLayout codeInputLayout;

  @NonNull
  public final TextInputEditText confirmPasswordEditText;

  @NonNull
  public final TextInputLayout confirmPasswordLayout;

  @NonNull
  public final TextInputEditText emailEditText;

  @NonNull
  public final TextInputLayout emailLayout;

  @NonNull
  public final TextInputEditText newPasswordEditText;

  @NonNull
  public final TextInputLayout newPasswordLayout;

  private ActivityChangePasswordBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button changePasswordButton, @NonNull TextView changePasswordTitle,
      @NonNull TextInputEditText codeEditText, @NonNull TextInputLayout codeInputLayout,
      @NonNull TextInputEditText confirmPasswordEditText,
      @NonNull TextInputLayout confirmPasswordLayout, @NonNull TextInputEditText emailEditText,
      @NonNull TextInputLayout emailLayout, @NonNull TextInputEditText newPasswordEditText,
      @NonNull TextInputLayout newPasswordLayout) {
    this.rootView = rootView;
    this.changePasswordButton = changePasswordButton;
    this.changePasswordTitle = changePasswordTitle;
    this.codeEditText = codeEditText;
    this.codeInputLayout = codeInputLayout;
    this.confirmPasswordEditText = confirmPasswordEditText;
    this.confirmPasswordLayout = confirmPasswordLayout;
    this.emailEditText = emailEditText;
    this.emailLayout = emailLayout;
    this.newPasswordEditText = newPasswordEditText;
    this.newPasswordLayout = newPasswordLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityChangePasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChangePasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_change_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChangePasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.changePasswordButton;
      Button changePasswordButton = ViewBindings.findChildViewById(rootView, id);
      if (changePasswordButton == null) {
        break missingId;
      }

      id = R.id.changePasswordTitle;
      TextView changePasswordTitle = ViewBindings.findChildViewById(rootView, id);
      if (changePasswordTitle == null) {
        break missingId;
      }

      id = R.id.codeEditText;
      TextInputEditText codeEditText = ViewBindings.findChildViewById(rootView, id);
      if (codeEditText == null) {
        break missingId;
      }

      id = R.id.codeInputLayout;
      TextInputLayout codeInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (codeInputLayout == null) {
        break missingId;
      }

      id = R.id.confirmPasswordEditText;
      TextInputEditText confirmPasswordEditText = ViewBindings.findChildViewById(rootView, id);
      if (confirmPasswordEditText == null) {
        break missingId;
      }

      id = R.id.confirmPasswordLayout;
      TextInputLayout confirmPasswordLayout = ViewBindings.findChildViewById(rootView, id);
      if (confirmPasswordLayout == null) {
        break missingId;
      }

      id = R.id.emailEditText;
      TextInputEditText emailEditText = ViewBindings.findChildViewById(rootView, id);
      if (emailEditText == null) {
        break missingId;
      }

      id = R.id.emailLayout;
      TextInputLayout emailLayout = ViewBindings.findChildViewById(rootView, id);
      if (emailLayout == null) {
        break missingId;
      }

      id = R.id.newPasswordEditText;
      TextInputEditText newPasswordEditText = ViewBindings.findChildViewById(rootView, id);
      if (newPasswordEditText == null) {
        break missingId;
      }

      id = R.id.newPasswordLayout;
      TextInputLayout newPasswordLayout = ViewBindings.findChildViewById(rootView, id);
      if (newPasswordLayout == null) {
        break missingId;
      }

      return new ActivityChangePasswordBinding((ConstraintLayout) rootView, changePasswordButton,
          changePasswordTitle, codeEditText, codeInputLayout, confirmPasswordEditText,
          confirmPasswordLayout, emailEditText, emailLayout, newPasswordEditText,
          newPasswordLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
