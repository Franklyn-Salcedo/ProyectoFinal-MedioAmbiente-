// Generated by view binder compiler. Do not edit!
package com.medioambiente.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.medioambiente.R;
import com.pierfrancescosoffritti.androidyoutubeplayer.core.player.views.YouTubePlayerView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAboutBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView aboutUsTitle;

  @NonNull
  public final MaterialButton backToHomeButton;

  @NonNull
  public final TextView beeDescription;

  @NonNull
  public final TextView beeTitle;

  @NonNull
  public final TextView historyTextView;

  @NonNull
  public final TextView historyTitle;

  @NonNull
  public final TextView missionTextView;

  @NonNull
  public final TextView missionTitle;

  @NonNull
  public final ProgressBar videoProgressBar;

  @NonNull
  public final TextView videoTitle;

  @NonNull
  public final TextView visionTextView;

  @NonNull
  public final TextView visionTitle;

  @NonNull
  public final YouTubePlayerView youtubePlayerView;

  private ActivityAboutBinding(@NonNull ScrollView rootView, @NonNull TextView aboutUsTitle,
      @NonNull MaterialButton backToHomeButton, @NonNull TextView beeDescription,
      @NonNull TextView beeTitle, @NonNull TextView historyTextView, @NonNull TextView historyTitle,
      @NonNull TextView missionTextView, @NonNull TextView missionTitle,
      @NonNull ProgressBar videoProgressBar, @NonNull TextView videoTitle,
      @NonNull TextView visionTextView, @NonNull TextView visionTitle,
      @NonNull YouTubePlayerView youtubePlayerView) {
    this.rootView = rootView;
    this.aboutUsTitle = aboutUsTitle;
    this.backToHomeButton = backToHomeButton;
    this.beeDescription = beeDescription;
    this.beeTitle = beeTitle;
    this.historyTextView = historyTextView;
    this.historyTitle = historyTitle;
    this.missionTextView = missionTextView;
    this.missionTitle = missionTitle;
    this.videoProgressBar = videoProgressBar;
    this.videoTitle = videoTitle;
    this.visionTextView = visionTextView;
    this.visionTitle = visionTitle;
    this.youtubePlayerView = youtubePlayerView;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAboutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAboutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_about, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAboutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.aboutUsTitle;
      TextView aboutUsTitle = ViewBindings.findChildViewById(rootView, id);
      if (aboutUsTitle == null) {
        break missingId;
      }

      id = R.id.backToHomeButton;
      MaterialButton backToHomeButton = ViewBindings.findChildViewById(rootView, id);
      if (backToHomeButton == null) {
        break missingId;
      }

      id = R.id.beeDescription;
      TextView beeDescription = ViewBindings.findChildViewById(rootView, id);
      if (beeDescription == null) {
        break missingId;
      }

      id = R.id.beeTitle;
      TextView beeTitle = ViewBindings.findChildViewById(rootView, id);
      if (beeTitle == null) {
        break missingId;
      }

      id = R.id.historyTextView;
      TextView historyTextView = ViewBindings.findChildViewById(rootView, id);
      if (historyTextView == null) {
        break missingId;
      }

      id = R.id.historyTitle;
      TextView historyTitle = ViewBindings.findChildViewById(rootView, id);
      if (historyTitle == null) {
        break missingId;
      }

      id = R.id.missionTextView;
      TextView missionTextView = ViewBindings.findChildViewById(rootView, id);
      if (missionTextView == null) {
        break missingId;
      }

      id = R.id.missionTitle;
      TextView missionTitle = ViewBindings.findChildViewById(rootView, id);
      if (missionTitle == null) {
        break missingId;
      }

      id = R.id.videoProgressBar;
      ProgressBar videoProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (videoProgressBar == null) {
        break missingId;
      }

      id = R.id.videoTitle;
      TextView videoTitle = ViewBindings.findChildViewById(rootView, id);
      if (videoTitle == null) {
        break missingId;
      }

      id = R.id.visionTextView;
      TextView visionTextView = ViewBindings.findChildViewById(rootView, id);
      if (visionTextView == null) {
        break missingId;
      }

      id = R.id.visionTitle;
      TextView visionTitle = ViewBindings.findChildViewById(rootView, id);
      if (visionTitle == null) {
        break missingId;
      }

      id = R.id.youtube_player_view;
      YouTubePlayerView youtubePlayerView = ViewBindings.findChildViewById(rootView, id);
      if (youtubePlayerView == null) {
        break missingId;
      }

      return new ActivityAboutBinding((ScrollView) rootView, aboutUsTitle, backToHomeButton,
          beeDescription, beeTitle, historyTextView, historyTitle, missionTextView, missionTitle,
          videoProgressBar, videoTitle, visionTextView, visionTitle, youtubePlayerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
